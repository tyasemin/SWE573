name: Docker Compose CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_DB: ${{ secrets.DB_NAME }}
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}

    services:
      postgres:
        image: postgres:14
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Create .env from GitHub Secrets
        run: |
          echo "DJANGO_SUPERUSER_USERNAME=${{ secrets.DJANGO_SUPERUSER_USERNAME }}" >> .env
          echo "DJANGO_SUPERUSER_EMAIL=${{ secrets.DJANGO_SUPERUSER_EMAIL }}" >> .env
          echo "DJANGO_SUPERUSER_PASSWORD=${{ secrets.DJANGO_SUPERUSER_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_HOST=db" >> .env
          echo "DB_PORT=5432" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env

      - name: Reset containers and volumes
        run: docker compose down -v

      - name: Build Docker images
        run: docker compose -f docker-compose.yml build

      - name: Run containers
        run: docker compose -f docker-compose.yml up -d

      - name: Wait for services to settle
        run: sleep 10

      - name: Save Django logs
        run: docker compose logs web > django_logs.txt

      - name: Upload Django logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: django-logs
          path: django_logs.txt

      - name: Save PostgreSQL logs
        run: docker compose logs db > postgres_logs.txt

      - name: Upload PostgreSQL logs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: postgres-logs
          path: postgres_logs.txt

      - name: Shut down containers
        run: docker compose down
